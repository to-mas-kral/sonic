#ifndef PT_SPECTRAL_DATA_H
#define PT_SPECTRAL_DATA_H

#include "../utils/basic_types.h"
#include "sampled_spectrum.h"

/// Data from: https://refractiveindex.info/ (public domain)

inline constexpr auto GLASS_BAF10_ETA_RAW = std::array<f32, 58>{
    350, 1.7126880848268, 371, 1.7044510025682, 393, 1.6978539633931,
    414, 1.6924597573902, 436, 1.6879747521657, 457, 1.6841935148947,
    479, 1.6809676313681, 500, 1.6781870617363, 522, 1.6757684467878,
    543, 1.6736474831891, 565, 1.6717737892968, 586, 1.6701073530462,
    608, 1.6686160168249, 629, 1.6672736605352, 651, 1.6660588657981,
    672, 1.6649539185393, 694, 1.6639440538738, 715, 1.6630168772865,
    737, 1.6621619159417, 758, 1.6613702672977, 780, 1.6606343213443,
    801, 1.6599475391478, 823, 1.6593042748862, 844, 1.6586996317841,
    866, 1.6581293446924, 887, 1.6575896837763, 909, 1.6570773750475,
};

inline constexpr auto GLASS_BK7_ETA_RAW = std::array<f32, 58>{
    300, 1.5527702635739, 322, 1.5458699289209, 344, 1.5404466868331,
    366, 1.536090527917,  388, 1.53252773217,   410, 1.529568767224,
    432, 1.5270784291406, 454, 1.5249578457324, 476, 1.5231331738499,
    498, 1.5215482528369, 520, 1.5201596882463, 542, 1.5189334783109,
    564, 1.5178426478869, 586, 1.516865556749,  608, 1.5159846691816,
    630, 1.5151856452759, 652, 1.5144566604975, 674, 1.513787889767,
    696, 1.5131711117948, 718, 1.5125994024544, 740, 1.5120668948646,
    762, 1.5115685899969, 784, 1.5111002059336, 806, 1.5106580569705,
    828, 1.5102389559626, 850, 1.5098401349174, 872, 1.5094591800239,
    894, 1.5090939781792, 916, 1.5087426727363,
};

inline constexpr auto GLASS_F11_ETA_RAW = std::array<f32, 58>{
    370, 1.8700216173234, 391, 1.8516255860581, 412, 1.8374707714715,
    433, 1.8262323798466, 455, 1.8170946940119, 476, 1.8095242343848,
    497, 1.803155581666,  519, 1.7977291183308, 540, 1.7930548640505,
    561, 1.7889903663666, 583, 1.7854266026774, 604, 1.7822786683156,
    625, 1.7794794394722, 646, 1.7769751487395, 668, 1.7747222267051,
    689, 1.7726850031375, 710, 1.770834004936,  732, 1.7691446766161,
    753, 1.7675964052635, 774, 1.7661717683505, 796, 1.764855947008,
    817, 1.7636362637211, 838, 1.7625018146862, 859, 1.7614431749629,
    881, 1.7604521601554, 902, 1.7595216323879,
};

inline constexpr auto AU_ETA_RAW = std::array<f32, 112>{
    298.757050, 1.795000,   302.400421, 1.812000,   306.133759, 1.822625,   309.960449,
    1.830000,   313.884003, 1.837125,   317.908142, 1.840000,   322.036835, 1.834250,
    326.274139, 1.824000,   330.624481, 1.812000,   335.092377, 1.798000,   339.682678,
    1.782000,   344.400482, 1.766000,   349.251221, 1.752500,   354.240509, 1.740000,
    359.374420, 1.727625,   364.659332, 1.716000,   370.102020, 1.705875,   375.709625,
    1.696000,   381.489777, 1.684750,   387.450562, 1.674000,   393.600555, 1.666000,
    399.948975, 1.658000,   406.505493, 1.647250,   413.280579, 1.636000,   420.285339,
    1.628000,   427.531647, 1.616000,   435.032196, 1.596250,   442.800629, 1.562000,
    450.851562, 1.502125,   459.200653, 1.426000,   467.864838, 1.345875,   476.862213,
    1.242000,   486.212463, 1.086750,   495.936707, 0.916000,   506.057861, 0.754500,
    516.600769, 0.608000,   527.592224, 0.491750,   539.061646, 0.402000,   551.040771,
    0.345500,   563.564453, 0.306000,   576.670593, 0.267625,   590.400818, 0.236000,
    604.800842, 0.212375,   619.920898, 0.194000,   635.816284, 0.177750,   652.548279,
    0.166000,   670.184753, 0.161000,   688.800964, 0.160000,   708.481018, 0.160875,
    729.318665, 0.164000,   751.419250, 0.169500,   774.901123, 0.176000,   799.897949,
    0.181375,   826.561157, 0.188000,   855.063293, 0.198125,   885.601257, 0.210000,
};

inline constexpr auto AU_K_RAW = std::array<f32, 112>{
    298.757050, 1.920375,   302.400421, 1.920000,   306.133759, 1.918875,   309.960449,
    1.916000,   313.884003, 1.911375,   317.908142, 1.904000,   322.036835, 1.891375,
    326.274139, 1.878000,   330.624481, 1.868250,   335.092377, 1.860000,   339.682678,
    1.851750,   344.400482, 1.846000,   349.251221, 1.845250,   354.240509, 1.848000,
    359.374420, 1.852375,   364.659332, 1.862000,   370.102020, 1.883000,   375.709625,
    1.906000,   381.489777, 1.922500,   387.450562, 1.936000,   393.600555, 1.947750,
    399.948975, 1.956000,   406.505493, 1.959375,   413.280579, 1.958000,   420.285339,
    1.951375,   427.531647, 1.940000,   435.032196, 1.924500,   442.800629, 1.904000,
    450.851562, 1.875875,   459.200653, 1.846000,   467.864838, 1.814625,   476.862213,
    1.796000,   486.212463, 1.797375,   495.936707, 1.840000,   506.057861, 1.956500,
    516.600769, 2.120000,   527.592224, 2.326250,   539.061646, 2.540000,   551.040771,
    2.730625,   563.564453, 2.880000,   576.670593, 2.940625,   590.400818, 2.970000,
    604.800842, 3.015000,   619.920898, 3.060000,   635.816284, 3.070000,   652.548279,
    3.150000,   670.184753, 3.445812,   688.800964, 3.800000,   708.481018, 4.087687,
    729.318665, 4.357000,   751.419250, 4.610188,   774.901123, 4.860000,   799.897949,
    5.125813,   826.561157, 5.390000,   855.063293, 5.631250,   885.601257, 5.880000,
};

inline constexpr auto AL_ETA_RAW = std::array<f32, 112>{
    298.757050, 0.273375,   302.400421, 0.280000,   306.133759, 0.286813,   309.960449,
    0.294000,   313.884003, 0.301875,   317.908142, 0.310000,   322.036835, 0.317875,
    326.274139, 0.326000,   330.624481, 0.334750,   335.092377, 0.344000,   339.682678,
    0.353813,   344.400482, 0.364000,   349.251221, 0.374375,   354.240509, 0.385000,
    359.374420, 0.395750,   364.659332, 0.407000,   370.102020, 0.419125,   375.709625,
    0.432000,   381.489777, 0.445688,   387.450562, 0.460000,   393.600555, 0.474688,
    399.948975, 0.490000,   406.505493, 0.506188,   413.280579, 0.523000,   420.285339,
    0.540063,   427.531647, 0.558000,   435.032196, 0.577313,   442.800629, 0.598000,
    450.851562, 0.620313,   459.200653, 0.644000,   467.864838, 0.668625,   476.862213,
    0.695000,   486.212463, 0.723750,   495.936707, 0.755000,   506.057861, 0.789000,
    516.600769, 0.826000,   527.592224, 0.867000,   539.061646, 0.912000,   551.040771,
    0.963000,   563.564453, 1.020000,   576.670593, 1.080000,   590.400818, 1.150000,
    604.800842, 1.220000,   619.920898, 1.300000,   635.816284, 1.390000,   652.548279,
    1.490000,   670.184753, 1.600000,   688.800964, 1.740000,   708.481018, 1.910000,
    729.318665, 2.140000,   751.419250, 2.410000,   774.901123, 2.630000,   799.897949,
    2.800000,   826.561157, 2.740000,   855.063293, 2.580000,   885.601257, 2.240000,
};

inline constexpr auto AL_K_RAW = std::array<f32, 112>{
    298.757050, 3.593750,   302.400421, 3.640000,   306.133759, 3.689375,   309.960449,
    3.740000,   313.884003, 3.789375,   317.908142, 3.840000,   322.036835, 3.894375,
    326.274139, 3.950000,   330.624481, 4.005000,   335.092377, 4.060000,   339.682678,
    4.113750,   344.400482, 4.170000,   349.251221, 4.233750,   354.240509, 4.300000,
    359.374420, 4.365000,   364.659332, 4.430000,   370.102020, 4.493750,   375.709625,
    4.560000,   381.489777, 4.633750,   387.450562, 4.710000,   393.600555, 4.784375,
    399.948975, 4.860000,   406.505493, 4.938125,   413.280579, 5.020000,   420.285339,
    5.108750,   427.531647, 5.200000,   435.032196, 5.290000,   442.800629, 5.380000,
    450.851562, 5.480000,   459.200653, 5.580000,   467.864838, 5.690000,   476.862213,
    5.800000,   486.212463, 5.915000,   495.936707, 6.030000,   506.057861, 6.150000,
    516.600769, 6.280000,   527.592224, 6.420000,   539.061646, 6.550000,   551.040771,
    6.700000,   563.564453, 6.850000,   576.670593, 7.000000,   590.400818, 7.150000,
    604.800842, 7.310000,   619.920898, 7.480000,   635.816284, 7.650000,   652.548279,
    7.820000,   670.184753, 8.010000,   688.800964, 8.210000,   708.481018, 8.390000,
    729.318665, 8.570000,   751.419250, 8.620000,   774.901123, 8.600000,   799.897949,
    8.450000,   826.561157, 8.310000,   855.063293, 8.210000,   885.601257, 8.210000,
};

inline constexpr auto AG_ETA_RAW = std::array<f32, 112>{
    298.757050, 1.519000,   302.400421, 1.496000,   306.133759, 1.432500,   309.960449,
    1.323000,   313.884003, 1.142062,   317.908142, 0.932000,   322.036835, 0.719062,
    326.274139, 0.526000,   330.624481, 0.388125,   335.092377, 0.294000,   339.682678,
    0.253313,   344.400482, 0.238000,   349.251221, 0.221438,   354.240509, 0.209000,
    359.374420, 0.194813,   364.659332, 0.186000,   370.102020, 0.192063,   375.709625,
    0.200000,   381.489777, 0.198063,   387.450562, 0.192000,   393.600555, 0.182000,
    399.948975, 0.173000,   406.505493, 0.172625,   413.280579, 0.173000,   420.285339,
    0.166688,   427.531647, 0.160000,   435.032196, 0.158500,   442.800629, 0.157000,
    450.851562, 0.151063,   459.200653, 0.144000,   467.864838, 0.137313,   476.862213,
    0.132000,   486.212463, 0.130250,   495.936707, 0.130000,   506.057861, 0.129938,
    516.600769, 0.130000,   527.592224, 0.130063,   539.061646, 0.129000,   551.040771,
    0.124375,   563.564453, 0.120000,   576.670593, 0.119313,   590.400818, 0.121000,
    604.800842, 0.125500,   619.920898, 0.131000,   635.816284, 0.136125,   652.548279,
    0.140000,   670.184753, 0.140063,   688.800964, 0.140000,   708.481018, 0.144313,
    729.318665, 0.148000,   751.419250, 0.145875,   774.901123, 0.143000,   799.897949,
    0.142563,   826.561157, 0.145000,   855.063293, 0.151938,   885.601257, 0.163000,
};

inline constexpr auto AG_K_RAW = std::array<f32, 112>{
    298.757050, 1.080000,   302.400421, 0.882000,   306.133759, 0.761063,   309.960449,
    0.647000,   313.884003, 0.550875,   317.908142, 0.504000,   322.036835, 0.554375,
    326.274139, 0.663000,   330.624481, 0.818563,   335.092377, 0.986000,   339.682678,
    1.120687,   344.400482, 1.240000,   349.251221, 1.345250,   354.240509, 1.440000,
    359.374420, 1.533750,   364.659332, 1.610000,   370.102020, 1.641875,   375.709625,
    1.670000,   381.489777, 1.735000,   387.450562, 1.810000,   393.600555, 1.878750,
    399.948975, 1.950000,   406.505493, 2.029375,   413.280579, 2.110000,   420.285339,
    2.186250,   427.531647, 2.260000,   435.032196, 2.329375,   442.800629, 2.400000,
    450.851562, 2.478750,   459.200653, 2.560000,   467.864838, 2.640000,   476.862213,
    2.720000,   486.212463, 2.798125,   495.936707, 2.880000,   506.057861, 2.973750,
    516.600769, 3.070000,   527.592224, 3.159375,   539.061646, 3.250000,   551.040771,
    3.348125,   563.564453, 3.450000,   576.670593, 3.553750,   590.400818, 3.660000,
    604.800842, 3.766250,   619.920898, 3.880000,   635.816284, 4.010625,   652.548279,
    4.150000,   670.184753, 4.293125,   688.800964, 4.440000,   708.481018, 4.586250,
    729.318665, 4.740000,   751.419250, 4.908125,   774.901123, 5.090000,   799.897949,
    5.288750,   826.561157, 5.500000,   855.063293, 5.720624,   885.601257, 5.950000,
};

inline constexpr auto CU_ETA_RAW = std::array<f32, 112>{
    298.757050, 1.400313,   302.400421, 1.380000,   306.133759, 1.358438,   309.960449,
    1.340000,   313.884003, 1.329063,   317.908142, 1.325000,   322.036835, 1.332500,
    326.274139, 1.340000,   330.624481, 1.334375,   335.092377, 1.325000,   339.682678,
    1.317812,   344.400482, 1.310000,   349.251221, 1.300313,   354.240509, 1.290000,
    359.374420, 1.281563,   364.659332, 1.270000,   370.102020, 1.249062,   375.709625,
    1.225000,   381.489777, 1.200000,   387.450562, 1.180000,   393.600555, 1.174375,
    399.948975, 1.175000,   406.505493, 1.177500,   413.280579, 1.180000,   420.285339,
    1.178125,   427.531647, 1.175000,   435.032196, 1.172812,   442.800629, 1.170000,
    450.851562, 1.165312,   459.200653, 1.160000,   467.864838, 1.155312,   476.862213,
    1.150000,   486.212463, 1.142812,   495.936707, 1.135000,   506.057861, 1.131562,
    516.600769, 1.120000,   527.592224, 1.092437,   539.061646, 1.040000,   551.040771,
    0.950375,   563.564453, 0.826000,   576.670593, 0.645875,   590.400818, 0.468000,
    604.800842, 0.351250,   619.920898, 0.272000,   635.816284, 0.230813,   652.548279,
    0.214000,   670.184753, 0.209250,   688.800964, 0.213000,   708.481018, 0.216250,
    729.318665, 0.223000,   751.419250, 0.236500,   774.901123, 0.250000,   799.897949,
    0.254188,   826.561157, 0.260000,   855.063293, 0.280000,   885.601257, 0.300000,
};

inline constexpr auto CU_K_RAW = std::array<f32, 112>{
    298.757050, 1.662125,   302.400421, 1.687000,   306.133759, 1.703313,   309.960449,
    1.720000,   313.884003, 1.744563,   317.908142, 1.770000,   322.036835, 1.791625,
    326.274139, 1.810000,   330.624481, 1.822125,   335.092377, 1.834000,   339.682678,
    1.851750,   344.400482, 1.872000,   349.251221, 1.894250,   354.240509, 1.916000,
    359.374420, 1.931688,   364.659332, 1.950000,   370.102020, 1.972438,   375.709625,
    2.015000,   381.489777, 2.121562,   387.450562, 2.210000,   393.600555, 2.177188,
    399.948975, 2.130000,   406.505493, 2.160063,   413.280579, 2.210000,   420.285339,
    2.249938,   427.531647, 2.289000,   435.032196, 2.326000,   442.800629, 2.362000,
    450.851562, 2.397625,   459.200653, 2.433000,   467.864838, 2.469187,   476.862213,
    2.504000,   486.212463, 2.535875,   495.936707, 2.564000,   506.057861, 2.589625,
    516.600769, 2.605000,   527.592224, 2.595562,   539.061646, 2.583000,   551.040771,
    2.576500,   563.564453, 2.599000,   576.670593, 2.678062,   590.400818, 2.809000,
    604.800842, 3.010750,   619.920898, 3.240000,   635.816284, 3.458187,   652.548279,
    3.670000,   670.184753, 3.863125,   688.800964, 4.050000,   708.481018, 4.239563,
    729.318665, 4.430000,   751.419250, 4.619563,   774.901123, 4.817000,   799.897949,
    5.034125,   826.561157, 5.260000,   855.063293, 5.485625,   885.601257, 5.717000,
};

inline constexpr auto TIO2_ETA_RAW = std::array<f32, 68>{
    305.972015, 3.840000,   317.979004, 5.380000,   334.990997, 4.220000,   344.007019,
    4.360000,   359.988007, 3.870000,   388.044006, 3.490000,   399.935028, 3.400000,
    412.031006, 3.240000,   419.985992, 3.290000,   439.957001, 3.200000,   460.037018,
    3.130000,   479.985016, 3.080000,   499.919006, 3.030000,   520.049988, 3.000000,
    539.044006, 2.950000,   539.983032, 2.970000,   559.981995, 2.940000,   579.888000,
    2.920000,   600.097046, 2.900000,   619.900024, 2.880000,   640.062012, 2.870000,
    659.819031, 2.850000,   680.088013, 2.840000,   700.056030, 2.830000,   719.976990,
    2.820000,   740.179016, 2.810000,   760.147034, 2.810000,   779.747986, 2.800000,
    799.871033, 2.790000,   819.974060, 2.790000,   839.973083, 2.780000,   859.778015,
    2.780000,   879.915039, 2.770000,   899.709961, 2.770000,
};

inline constexpr auto TIO2_K_RAW = std::array<f32, 68>{
    305.972015, 1.950000,   317.979004, 2.180000,   334.990997, 0.788000,   344.007019,
    0.000000,   359.988007, 0.251000,   388.044006, 0.000000,   399.935028, 0.000000,
    412.031006, 0.022000,   419.985992, 0.000000,   439.957001, 0.000000,   460.037018,
    0.000000,   479.985016, 0.000000,   499.919006, 0.000000,   520.049988, 0.000000,
    539.044006, 0.000000,   539.983032, 0.000000,   559.981995, 0.000000,   579.888000,
    0.000000,   600.097046, 0.000000,   619.900024, 0.000000,   640.062012, 0.000000,
    659.819031, 0.000000,   680.088013, 0.000000,   700.056030, 0.000000,   719.976990,
    0.000000,   740.179016, 0.000000,   760.147034, 0.000000,   779.747986, 0.000000,
    799.871033, 0.000000,   819.974060, 0.000000,   839.973083, 0.000000,   859.778015,
    0.000000,   879.915039, 0.000000,   899.709961, 0.000000,
};

constexpr PiecewiseSpectrum GLASS_BAF10_ETA = PiecewiseSpectrum::make(
    std::span<const f32>(GLASS_BAF10_ETA_RAW.data(), GLASS_BAF10_ETA_RAW.size()));

constexpr PiecewiseSpectrum GLASS_BK7_ETA = PiecewiseSpectrum::make(
    std::span<const f32>(GLASS_BK7_ETA_RAW.data(), GLASS_BK7_ETA_RAW.size()));

constexpr PiecewiseSpectrum GLASS_F11_ETA = PiecewiseSpectrum::make(
    std::span<const f32>(GLASS_F11_ETA_RAW.data(), GLASS_F11_ETA_RAW.size()));

constexpr PiecewiseSpectrum AU_ETA =
    PiecewiseSpectrum::make(std::span<const f32>(AU_ETA_RAW.data(), AU_ETA_RAW.size()));

constexpr PiecewiseSpectrum AU_K =
    PiecewiseSpectrum::make(std::span<const f32>(AU_K_RAW.data(), AU_K_RAW.size()));

constexpr PiecewiseSpectrum AL_ETA =
    PiecewiseSpectrum::make(std::span<const f32>(AL_ETA_RAW.data(), AL_ETA_RAW.size()));

constexpr PiecewiseSpectrum AL_K =
    PiecewiseSpectrum::make(std::span<const f32>(AL_K_RAW.data(), AL_K_RAW.size()));

constexpr PiecewiseSpectrum AG_ETA =
    PiecewiseSpectrum::make(std::span<const f32>(AG_ETA_RAW.data(), AG_ETA_RAW.size()));

constexpr PiecewiseSpectrum AG_K =
    PiecewiseSpectrum::make(std::span<const f32>(AG_K_RAW.data(), AG_K_RAW.size()));

constexpr PiecewiseSpectrum CU_ETA =
    PiecewiseSpectrum::make(std::span<const f32>(CU_ETA_RAW.data(), CU_ETA_RAW.size()));

constexpr PiecewiseSpectrum CU_K =
    PiecewiseSpectrum::make(std::span<const f32>(CU_K_RAW.data(), CU_K_RAW.size()));

constexpr PiecewiseSpectrum TIO2_ETA = PiecewiseSpectrum::make(
    std::span<const f32>(TIO2_ETA_RAW.data(), TIO2_ETA_RAW.size()));

constexpr PiecewiseSpectrum TIO2_K =
    PiecewiseSpectrum::make(std::span<const f32>(TIO2_K_RAW.data(), TIO2_K_RAW.size()));

constexpr ConstantSpectrum AIR_ETA = ConstantSpectrum::make(1.000277f);

constexpr ConstantSpectrum POLYPROPYLENE_ETA = ConstantSpectrum::make(1.49f);

#endif // PT_SPECTRAL_DATA_H
