#ifndef PT_SPECTRAL_DATA_H
#define PT_SPECTRAL_DATA_H

#include "../utils/basic_types.h"

#include "spectrum.h"

/// Data from: https://refractiveindex.info/ (public domain)

inline constexpr auto GLASS_BAF10_ETA_RAW = std::array<f32, 58>{
    350, 1.7126880848268, 371, 1.7044510025682, 393, 1.6978539633931,
    414, 1.6924597573902, 436, 1.6879747521657, 457, 1.6841935148947,
    479, 1.6809676313681, 500, 1.6781870617363, 522, 1.6757684467878,
    543, 1.6736474831891, 565, 1.6717737892968, 586, 1.6701073530462,
    608, 1.6686160168249, 629, 1.6672736605352, 651, 1.6660588657981,
    672, 1.6649539185393, 694, 1.6639440538738, 715, 1.6630168772865,
    737, 1.6621619159417, 758, 1.6613702672977, 780, 1.6606343213443,
    801, 1.6599475391478, 823, 1.6593042748862, 844, 1.6586996317841,
    866, 1.6581293446924, 887, 1.6575896837763, 909, 1.6570773750475,
};

inline constexpr auto GLASS_BK7_ETA_RAW = std::array<f32, 58>{
    300, 1.5527702635739, 322, 1.5458699289209, 344, 1.5404466868331,
    366, 1.536090527917,  388, 1.53252773217,   410, 1.529568767224,
    432, 1.5270784291406, 454, 1.5249578457324, 476, 1.5231331738499,
    498, 1.5215482528369, 520, 1.5201596882463, 542, 1.5189334783109,
    564, 1.5178426478869, 586, 1.516865556749,  608, 1.5159846691816,
    630, 1.5151856452759, 652, 1.5144566604975, 674, 1.513787889767,
    696, 1.5131711117948, 718, 1.5125994024544, 740, 1.5120668948646,
    762, 1.5115685899969, 784, 1.5111002059336, 806, 1.5106580569705,
    828, 1.5102389559626, 850, 1.5098401349174, 872, 1.5094591800239,
    894, 1.5090939781792, 916, 1.5087426727363,
};

inline constexpr auto GLASS_F11_ETA_RAW = std::array<f32, 58>{
    370, 1.8700216173234, 391, 1.8516255860581, 412, 1.8374707714715,
    433, 1.8262323798466, 455, 1.8170946940119, 476, 1.8095242343848,
    497, 1.803155581666,  519, 1.7977291183308, 540, 1.7930548640505,
    561, 1.7889903663666, 583, 1.7854266026774, 604, 1.7822786683156,
    625, 1.7794794394722, 646, 1.7769751487395, 668, 1.7747222267051,
    689, 1.7726850031375, 710, 1.770834004936,  732, 1.7691446766161,
    753, 1.7675964052635, 774, 1.7661717683505, 796, 1.764855947008,
    817, 1.7636362637211, 838, 1.7625018146862, 859, 1.7614431749629,
    881, 1.7604521601554, 902, 1.7595216323879,
};

inline constexpr auto AU_ETA_RAW = std::array<f32, 112>{
    298.757050, 1.795000,   302.400421, 1.812000,   306.133759, 1.822625,   309.960449,
    1.830000,   313.884003, 1.837125,   317.908142, 1.840000,   322.036835, 1.834250,
    326.274139, 1.824000,   330.624481, 1.812000,   335.092377, 1.798000,   339.682678,
    1.782000,   344.400482, 1.766000,   349.251221, 1.752500,   354.240509, 1.740000,
    359.374420, 1.727625,   364.659332, 1.716000,   370.102020, 1.705875,   375.709625,
    1.696000,   381.489777, 1.684750,   387.450562, 1.674000,   393.600555, 1.666000,
    399.948975, 1.658000,   406.505493, 1.647250,   413.280579, 1.636000,   420.285339,
    1.628000,   427.531647, 1.616000,   435.032196, 1.596250,   442.800629, 1.562000,
    450.851562, 1.502125,   459.200653, 1.426000,   467.864838, 1.345875,   476.862213,
    1.242000,   486.212463, 1.086750,   495.936707, 0.916000,   506.057861, 0.754500,
    516.600769, 0.608000,   527.592224, 0.491750,   539.061646, 0.402000,   551.040771,
    0.345500,   563.564453, 0.306000,   576.670593, 0.267625,   590.400818, 0.236000,
    604.800842, 0.212375,   619.920898, 0.194000,   635.816284, 0.177750,   652.548279,
    0.166000,   670.184753, 0.161000,   688.800964, 0.160000,   708.481018, 0.160875,
    729.318665, 0.164000,   751.419250, 0.169500,   774.901123, 0.176000,   799.897949,
    0.181375,   826.561157, 0.188000,   855.063293, 0.198125,   885.601257, 0.210000,
};

inline constexpr auto AU_K_RAW = std::array<f32, 112>{
    298.757050, 1.920375,   302.400421, 1.920000,   306.133759, 1.918875,   309.960449,
    1.916000,   313.884003, 1.911375,   317.908142, 1.904000,   322.036835, 1.891375,
    326.274139, 1.878000,   330.624481, 1.868250,   335.092377, 1.860000,   339.682678,
    1.851750,   344.400482, 1.846000,   349.251221, 1.845250,   354.240509, 1.848000,
    359.374420, 1.852375,   364.659332, 1.862000,   370.102020, 1.883000,   375.709625,
    1.906000,   381.489777, 1.922500,   387.450562, 1.936000,   393.600555, 1.947750,
    399.948975, 1.956000,   406.505493, 1.959375,   413.280579, 1.958000,   420.285339,
    1.951375,   427.531647, 1.940000,   435.032196, 1.924500,   442.800629, 1.904000,
    450.851562, 1.875875,   459.200653, 1.846000,   467.864838, 1.814625,   476.862213,
    1.796000,   486.212463, 1.797375,   495.936707, 1.840000,   506.057861, 1.956500,
    516.600769, 2.120000,   527.592224, 2.326250,   539.061646, 2.540000,   551.040771,
    2.730625,   563.564453, 2.880000,   576.670593, 2.940625,   590.400818, 2.970000,
    604.800842, 3.015000,   619.920898, 3.060000,   635.816284, 3.070000,   652.548279,
    3.150000,   670.184753, 3.445812,   688.800964, 3.800000,   708.481018, 4.087687,
    729.318665, 4.357000,   751.419250, 4.610188,   774.901123, 4.860000,   799.897949,
    5.125813,   826.561157, 5.390000,   855.063293, 5.631250,   885.601257, 5.880000,
};

inline constexpr auto AL_ETA_RAW = std::array<f32, 112>{
    298.757050, 0.273375,   302.400421, 0.280000,   306.133759, 0.286813,   309.960449,
    0.294000,   313.884003, 0.301875,   317.908142, 0.310000,   322.036835, 0.317875,
    326.274139, 0.326000,   330.624481, 0.334750,   335.092377, 0.344000,   339.682678,
    0.353813,   344.400482, 0.364000,   349.251221, 0.374375,   354.240509, 0.385000,
    359.374420, 0.395750,   364.659332, 0.407000,   370.102020, 0.419125,   375.709625,
    0.432000,   381.489777, 0.445688,   387.450562, 0.460000,   393.600555, 0.474688,
    399.948975, 0.490000,   406.505493, 0.506188,   413.280579, 0.523000,   420.285339,
    0.540063,   427.531647, 0.558000,   435.032196, 0.577313,   442.800629, 0.598000,
    450.851562, 0.620313,   459.200653, 0.644000,   467.864838, 0.668625,   476.862213,
    0.695000,   486.212463, 0.723750,   495.936707, 0.755000,   506.057861, 0.789000,
    516.600769, 0.826000,   527.592224, 0.867000,   539.061646, 0.912000,   551.040771,
    0.963000,   563.564453, 1.020000,   576.670593, 1.080000,   590.400818, 1.150000,
    604.800842, 1.220000,   619.920898, 1.300000,   635.816284, 1.390000,   652.548279,
    1.490000,   670.184753, 1.600000,   688.800964, 1.740000,   708.481018, 1.910000,
    729.318665, 2.140000,   751.419250, 2.410000,   774.901123, 2.630000,   799.897949,
    2.800000,   826.561157, 2.740000,   855.063293, 2.580000,   885.601257, 2.240000,
};

inline constexpr auto AL_K_RAW = std::array<f32, 112>{
    298.757050, 3.593750,   302.400421, 3.640000,   306.133759, 3.689375,   309.960449,
    3.740000,   313.884003, 3.789375,   317.908142, 3.840000,   322.036835, 3.894375,
    326.274139, 3.950000,   330.624481, 4.005000,   335.092377, 4.060000,   339.682678,
    4.113750,   344.400482, 4.170000,   349.251221, 4.233750,   354.240509, 4.300000,
    359.374420, 4.365000,   364.659332, 4.430000,   370.102020, 4.493750,   375.709625,
    4.560000,   381.489777, 4.633750,   387.450562, 4.710000,   393.600555, 4.784375,
    399.948975, 4.860000,   406.505493, 4.938125,   413.280579, 5.020000,   420.285339,
    5.108750,   427.531647, 5.200000,   435.032196, 5.290000,   442.800629, 5.380000,
    450.851562, 5.480000,   459.200653, 5.580000,   467.864838, 5.690000,   476.862213,
    5.800000,   486.212463, 5.915000,   495.936707, 6.030000,   506.057861, 6.150000,
    516.600769, 6.280000,   527.592224, 6.420000,   539.061646, 6.550000,   551.040771,
    6.700000,   563.564453, 6.850000,   576.670593, 7.000000,   590.400818, 7.150000,
    604.800842, 7.310000,   619.920898, 7.480000,   635.816284, 7.650000,   652.548279,
    7.820000,   670.184753, 8.010000,   688.800964, 8.210000,   708.481018, 8.390000,
    729.318665, 8.570000,   751.419250, 8.620000,   774.901123, 8.600000,   799.897949,
    8.450000,   826.561157, 8.310000,   855.063293, 8.210000,   885.601257, 8.210000,
};

inline constexpr auto AG_ETA_RAW = std::array<f32, 112>{
    298.757050, 1.519000,   302.400421, 1.496000,   306.133759, 1.432500,   309.960449,
    1.323000,   313.884003, 1.142062,   317.908142, 0.932000,   322.036835, 0.719062,
    326.274139, 0.526000,   330.624481, 0.388125,   335.092377, 0.294000,   339.682678,
    0.253313,   344.400482, 0.238000,   349.251221, 0.221438,   354.240509, 0.209000,
    359.374420, 0.194813,   364.659332, 0.186000,   370.102020, 0.192063,   375.709625,
    0.200000,   381.489777, 0.198063,   387.450562, 0.192000,   393.600555, 0.182000,
    399.948975, 0.173000,   406.505493, 0.172625,   413.280579, 0.173000,   420.285339,
    0.166688,   427.531647, 0.160000,   435.032196, 0.158500,   442.800629, 0.157000,
    450.851562, 0.151063,   459.200653, 0.144000,   467.864838, 0.137313,   476.862213,
    0.132000,   486.212463, 0.130250,   495.936707, 0.130000,   506.057861, 0.129938,
    516.600769, 0.130000,   527.592224, 0.130063,   539.061646, 0.129000,   551.040771,
    0.124375,   563.564453, 0.120000,   576.670593, 0.119313,   590.400818, 0.121000,
    604.800842, 0.125500,   619.920898, 0.131000,   635.816284, 0.136125,   652.548279,
    0.140000,   670.184753, 0.140063,   688.800964, 0.140000,   708.481018, 0.144313,
    729.318665, 0.148000,   751.419250, 0.145875,   774.901123, 0.143000,   799.897949,
    0.142563,   826.561157, 0.145000,   855.063293, 0.151938,   885.601257, 0.163000,
};

inline constexpr auto AG_K_RAW = std::array<f32, 112>{
    298.757050, 1.080000,   302.400421, 0.882000,   306.133759, 0.761063,   309.960449,
    0.647000,   313.884003, 0.550875,   317.908142, 0.504000,   322.036835, 0.554375,
    326.274139, 0.663000,   330.624481, 0.818563,   335.092377, 0.986000,   339.682678,
    1.120687,   344.400482, 1.240000,   349.251221, 1.345250,   354.240509, 1.440000,
    359.374420, 1.533750,   364.659332, 1.610000,   370.102020, 1.641875,   375.709625,
    1.670000,   381.489777, 1.735000,   387.450562, 1.810000,   393.600555, 1.878750,
    399.948975, 1.950000,   406.505493, 2.029375,   413.280579, 2.110000,   420.285339,
    2.186250,   427.531647, 2.260000,   435.032196, 2.329375,   442.800629, 2.400000,
    450.851562, 2.478750,   459.200653, 2.560000,   467.864838, 2.640000,   476.862213,
    2.720000,   486.212463, 2.798125,   495.936707, 2.880000,   506.057861, 2.973750,
    516.600769, 3.070000,   527.592224, 3.159375,   539.061646, 3.250000,   551.040771,
    3.348125,   563.564453, 3.450000,   576.670593, 3.553750,   590.400818, 3.660000,
    604.800842, 3.766250,   619.920898, 3.880000,   635.816284, 4.010625,   652.548279,
    4.150000,   670.184753, 4.293125,   688.800964, 4.440000,   708.481018, 4.586250,
    729.318665, 4.740000,   751.419250, 4.908125,   774.901123, 5.090000,   799.897949,
    5.288750,   826.561157, 5.500000,   855.063293, 5.720624,   885.601257, 5.950000,
};

inline constexpr auto CU_ETA_RAW = std::array<f32, 112>{
    298.757050, 1.400313,   302.400421, 1.380000,   306.133759, 1.358438,   309.960449,
    1.340000,   313.884003, 1.329063,   317.908142, 1.325000,   322.036835, 1.332500,
    326.274139, 1.340000,   330.624481, 1.334375,   335.092377, 1.325000,   339.682678,
    1.317812,   344.400482, 1.310000,   349.251221, 1.300313,   354.240509, 1.290000,
    359.374420, 1.281563,   364.659332, 1.270000,   370.102020, 1.249062,   375.709625,
    1.225000,   381.489777, 1.200000,   387.450562, 1.180000,   393.600555, 1.174375,
    399.948975, 1.175000,   406.505493, 1.177500,   413.280579, 1.180000,   420.285339,
    1.178125,   427.531647, 1.175000,   435.032196, 1.172812,   442.800629, 1.170000,
    450.851562, 1.165312,   459.200653, 1.160000,   467.864838, 1.155312,   476.862213,
    1.150000,   486.212463, 1.142812,   495.936707, 1.135000,   506.057861, 1.131562,
    516.600769, 1.120000,   527.592224, 1.092437,   539.061646, 1.040000,   551.040771,
    0.950375,   563.564453, 0.826000,   576.670593, 0.645875,   590.400818, 0.468000,
    604.800842, 0.351250,   619.920898, 0.272000,   635.816284, 0.230813,   652.548279,
    0.214000,   670.184753, 0.209250,   688.800964, 0.213000,   708.481018, 0.216250,
    729.318665, 0.223000,   751.419250, 0.236500,   774.901123, 0.250000,   799.897949,
    0.254188,   826.561157, 0.260000,   855.063293, 0.280000,   885.601257, 0.300000,
};

inline constexpr auto CU_K_RAW = std::array<f32, 112>{
    298.757050, 1.662125,   302.400421, 1.687000,   306.133759, 1.703313,   309.960449,
    1.720000,   313.884003, 1.744563,   317.908142, 1.770000,   322.036835, 1.791625,
    326.274139, 1.810000,   330.624481, 1.822125,   335.092377, 1.834000,   339.682678,
    1.851750,   344.400482, 1.872000,   349.251221, 1.894250,   354.240509, 1.916000,
    359.374420, 1.931688,   364.659332, 1.950000,   370.102020, 1.972438,   375.709625,
    2.015000,   381.489777, 2.121562,   387.450562, 2.210000,   393.600555, 2.177188,
    399.948975, 2.130000,   406.505493, 2.160063,   413.280579, 2.210000,   420.285339,
    2.249938,   427.531647, 2.289000,   435.032196, 2.326000,   442.800629, 2.362000,
    450.851562, 2.397625,   459.200653, 2.433000,   467.864838, 2.469187,   476.862213,
    2.504000,   486.212463, 2.535875,   495.936707, 2.564000,   506.057861, 2.589625,
    516.600769, 2.605000,   527.592224, 2.595562,   539.061646, 2.583000,   551.040771,
    2.576500,   563.564453, 2.599000,   576.670593, 2.678062,   590.400818, 2.809000,
    604.800842, 3.010750,   619.920898, 3.240000,   635.816284, 3.458187,   652.548279,
    3.670000,   670.184753, 3.863125,   688.800964, 4.050000,   708.481018, 4.239563,
    729.318665, 4.430000,   751.419250, 4.619563,   774.901123, 4.817000,   799.897949,
    5.034125,   826.561157, 5.260000,   855.063293, 5.485625,   885.601257, 5.717000,
};

inline constexpr auto TIO2_ETA_RAW = std::array<f32, 68>{
    305.972015, 3.840000,   317.979004, 5.380000,   334.990997, 4.220000,   344.007019,
    4.360000,   359.988007, 3.870000,   388.044006, 3.490000,   399.935028, 3.400000,
    412.031006, 3.240000,   419.985992, 3.290000,   439.957001, 3.200000,   460.037018,
    3.130000,   479.985016, 3.080000,   499.919006, 3.030000,   520.049988, 3.000000,
    539.044006, 2.950000,   539.983032, 2.970000,   559.981995, 2.940000,   579.888000,
    2.920000,   600.097046, 2.900000,   619.900024, 2.880000,   640.062012, 2.870000,
    659.819031, 2.850000,   680.088013, 2.840000,   700.056030, 2.830000,   719.976990,
    2.820000,   740.179016, 2.810000,   760.147034, 2.810000,   779.747986, 2.800000,
    799.871033, 2.790000,   819.974060, 2.790000,   839.973083, 2.780000,   859.778015,
    2.780000,   879.915039, 2.770000,   899.709961, 2.770000,
};

inline constexpr auto TIO2_K_RAW = std::array<f32, 68>{
    305.972015, 1.950000,   317.979004, 2.180000,   334.990997, 0.788000,   344.007019,
    0.000000,   359.988007, 0.251000,   388.044006, 0.000000,   399.935028, 0.000000,
    412.031006, 0.022000,   419.985992, 0.000000,   439.957001, 0.000000,   460.037018,
    0.000000,   479.985016, 0.000000,   499.919006, 0.000000,   520.049988, 0.000000,
    539.044006, 0.000000,   539.983032, 0.000000,   559.981995, 0.000000,   579.888000,
    0.000000,   600.097046, 0.000000,   619.900024, 0.000000,   640.062012, 0.000000,
    659.819031, 0.000000,   680.088013, 0.000000,   700.056030, 0.000000,   719.976990,
    0.000000,   740.179016, 0.000000,   760.147034, 0.000000,   779.747986, 0.000000,
    799.871033, 0.000000,   819.974060, 0.000000,   839.973083, 0.000000,   859.778015,
    0.000000,   879.915039, 0.000000,   899.709961, 0.000000,
};

inline constexpr auto CIE_FL_10_RAW =
    std::array{380.F, 1.11F,  385.F, 0.8F,   390.F, 0.62F,  395.F, 0.57F,  400.F, 1.48F,
               405.F, 12.16F, 410.F, 2.12F,  415.F, 2.7F,   420.F, 3.74F,  425.F, 5.14F,
               430.F, 6.75F,  435.F, 34.39F, 440.F, 14.86F, 445.F, 10.4F,  450.F, 10.76F,
               455.F, 10.67F, 460.F, 10.11F, 465.F, 9.27F,  470.F, 8.29F,  475.F, 7.29F,
               480.F, 7.91F,  485.F, 16.64F, 490.F, 16.73F, 495.F, 10.44F, 500.F, 5.94F,
               505.F, 3.34F,  510.F, 2.35F,  515.F, 1.88F,  520.F, 1.59F,  525.F, 1.47F,
               530.F, 1.8F,   535.F, 5.71F,  540.F, 40.98F, 545.F, 73.69F, 550.F, 33.61F,
               555.F, 8.24F,  560.F, 3.38F,  565.F, 2.47F,  570.F, 2.14F,  575.F, 4.86F,
               580.F, 11.45F, 585.F, 14.79F, 590.F, 12.16F, 595.F, 8.97F,  600.F, 6.52F,
               605.F, 8.31F,  610.F, 44.12F, 615.F, 34.55F, 620.F, 12.09F, 625.F, 12.15F,
               630.F, 10.52F, 635.F, 4.43F,  640.F, 1.95F,  645.F, 2.19F,  650.F, 3.19F,
               655.F, 2.77F,  660.F, 2.29F,  665.F, 2.F,    670.F, 1.52F,  675.F, 1.35F,
               680.F, 1.47F,  685.F, 1.79F,  690.F, 1.74F,  695.F, 1.02F,  700.F, 1.14F,
               705.F, 3.32F,  710.F, 4.49F,  715.F, 2.05F,  720.F, 0.49F,  725.F, 0.24F,
               730.F, 0.21F,  735.F, 0.21F,  740.F, 0.24F,  745.F, 0.24F,  750.F, 0.21F,
               755.F, 0.17F,  760.F, 0.21F,  765.F, 0.22F,  770.F, 0.17F,  775.F, 0.12F,
               780.F, 0.09F};

inline constexpr auto PHILIPS_CANDLELIGHT_RAW = std::array<f32, 1216>{
    404.5, 0.000003279, 405,   2.8107e-7,    412, 0.0000058335, 412.5, 0.000041846,
    413,   0.00010341,  413.5, 0.00018277,   414, 0.00018663,   414.5, 0.00016648,
    415,   0.00011877,  415.5, 0.000078126,  416, 0.00010748,   416.5, 0.00017787,
    417,   0.0002925,   417.5, 0.00038765,   418, 0.00043171,   418.5, 0.00044293,
    419,   0.0004535,   419.5, 0.00054051,   420, 0.00065845,   420.5, 0.00075803,
    421,   0.00082793,  421.5, 0.00088861,   422, 0.00095278,   422.5, 0.0010197,
    423,   0.0011215,   423.5, 0.0011843,    424, 0.0012377,    424.5, 0.0013012,
    425,   0.001373,    425.5, 0.0014778,    426, 0.0015858,    426.5, 0.0016567,
    427,   0.001753,    427.5, 0.0018495,    428, 0.0019495,    428.5, 0.0020773,
    429,   0.0021953,   429.5, 0.0023608,    430, 0.0024727,    430.5, 0.0025497,
    431,   0.0026102,   431.5, 0.0027049,    432, 0.0028774,    432.5, 0.0030581,
    433,   0.0031846,   433.5, 0.003244,     434, 0.003324,     434.5, 0.0034697,
    435,   0.0036344,   435.5, 0.0037656,    436, 0.003855,     436.5, 0.0039405,
    437,   0.0040721,   437.5, 0.0041926,    438, 0.0042832,    438.5, 0.0043631,
    439,   0.0044833,   439.5, 0.00462,      440, 0.0048137,    440.5, 0.0049775,
    441,   0.005083,    441.5, 0.0051385,    442, 0.0051272,    442.5, 0.005081,
    443,   0.0049928,   443.5, 0.0048893,    444, 0.0047964,    444.5, 0.0047662,
    445,   0.0047424,   445.5, 0.0046153,    446, 0.0044569,    446.5, 0.0042668,
    447,   0.0041006,   447.5, 0.0039915,    448, 0.003838,     448.5, 0.0036826,
    449,   0.0034378,   449.5, 0.003191,     450, 0.0029256,    450.5, 0.0027482,
    451,   0.0025686,   451.5, 0.0023839,    452, 0.0021913,    452.5, 0.002036,
    453,   0.0019498,   453.5, 0.0018193,    454, 0.0017032,    454.5, 0.0015774,
    455,   0.0015008,   455.5, 0.0014597,    456, 0.001376,     456.5, 0.0012982,
    457,   0.0012261,   457.5, 0.0011544,    458, 0.0011257,    458.5, 0.0010631,
    459,   0.00099702,  459.5, 0.00094726,   460, 0.0008936,    460.5, 0.00084936,
    461,   0.0008359,   461.5, 0.000812,     462, 0.0008194,    462.5, 0.00078621,
    463,   0.00071916,  463.5, 0.00065921,   464, 0.00061238,   464.5, 0.00056156,
    465,   0.00050081,  465.5, 0.00046285,   466, 0.00045546,   466.5, 0.00048024,
    467,   0.00045607,  467.5, 0.00044789,   468, 0.00046066,   468.5, 0.00047847,
    469,   0.00050155,  469.5, 0.00047611,   470, 0.00041893,   470.5, 0.00039363,
    471,   0.00038651,  471.5, 0.00039045,   472, 0.00041355,   472.5, 0.00040304,
    473,   0.0003912,   473.5, 0.00039023,   474, 0.00036341,   474.5, 0.0003585,
    475,   0.00032094,  475.5, 0.00031676,   476, 0.00030918,   476.5, 0.00031012,
    477,   0.00024974,  477.5, 0.00019923,   478, 0.00015743,   478.5, 0.00018424,
    479,   0.00023783,  479.5, 0.00032148,   480, 0.00037289,   480.5, 0.00037589,
    481,   0.00034516,  481.5, 0.00032343,   482, 0.00033508,   482.5, 0.00036343,
    483,   0.0003596,   483.5, 0.00037123,   484, 0.00037643,   484.5, 0.0003736,
    485,   0.00036582,  485.5, 0.0003672,    486, 0.00040684,   486.5, 0.00044962,
    487,   0.0004978,   487.5, 0.000532,     488, 0.00056443,   488.5, 0.00057081,
    489,   0.00057225,  489.5, 0.0005783,    490, 0.00060676,   490.5, 0.00065088,
    491,   0.00071299,  491.5, 0.00077589,   492, 0.00080785,   492.5, 0.00083208,
    493,   0.00085456,  493.5, 0.0009053,    494, 0.00097143,   494.5, 0.0010234,
    495,   0.0010704,   495.5, 0.001128,     496, 0.0011893,    496.5, 0.0012682,
    497,   0.0013398,   497.5, 0.0013953,    498, 0.0014545,    498.5, 0.0015098,
    499,   0.0015762,   499.5, 0.0016538,    500, 0.001748,     500.5, 0.0018448,
    501,   0.0019328,   501.5, 0.0020249,    502, 0.0020945,    502.5, 0.0021607,
    503,   0.0022256,   503.5, 0.0023056,    504, 0.0024059,    504.5, 0.0025053,
    505,   0.0025936,   505.5, 0.0026944,    506, 0.0028168,    506.5, 0.0029141,
    507,   0.0029977,   507.5, 0.0030818,    508, 0.0031823,    508.5, 0.0033021,
    509,   0.0034297,   509.5, 0.003527,     510, 0.003626,     510.5, 0.0037204,
    511,   0.0037792,   511.5, 0.0038422,    512, 0.0039185,    512.5, 0.0040326,
    513,   0.0041743,   513.5, 0.0042884,    514, 0.0043956,    514.5, 0.0045026,
    515,   0.0046084,   515.5, 0.0046939,    516, 0.0047864,    516.5, 0.0048387,
    517,   0.0049279,   517.5, 0.0050243,    518, 0.0051232,    518.5, 0.005212,
    519,   0.0052658,   519.5, 0.0053195,    520, 0.00538,      520.5, 0.0054454,
    521,   0.005488,    521.5, 0.0055454,    522, 0.0056185,    522.5, 0.005711,
    523,   0.0058148,   523.5, 0.0058847,    524, 0.005962,     524.5, 0.0060154,
    525,   0.0060554,   525.5, 0.0061001,    526, 0.0061699,    526.5, 0.0062386,
    527,   0.0063213,   527.5, 0.0063737,    528, 0.0064147,    528.5, 0.0064732,
    529,   0.0064985,   529.5, 0.0065574,    530, 0.0066143,    530.5, 0.0066629,
    531,   0.0067111,   531.5, 0.0067493,    532, 0.006792,     532.5, 0.0068183,
    533,   0.0068386,   533.5, 0.0068526,    534, 0.0068667,    534.5, 0.0068534,
    535,   0.0068501,   535.5, 0.0068564,    536, 0.00693,      536.5, 0.0070017,
    537,   0.0070377,   537.5, 0.0070542,    538, 0.0070439,    538.5, 0.0070651,
    539,   0.0070795,   539.5, 0.0070746,    540, 0.0070691,    540.5, 0.0070961,
    541,   0.0071435,   541.5, 0.0072065,    542, 0.0072387,    542.5, 0.0072332,
    543,   0.0072081,   543.5, 0.0071903,    544, 0.0071967,    544.5, 0.0072261,
    545,   0.0072143,   545.5, 0.0072196,    546, 0.0072086,    546.5, 0.0072588,
    547,   0.0072677,   547.5, 0.0072584,    548, 0.0072376,    548.5, 0.0072175,
    549,   0.0072093,   549.5, 0.007207,     550, 0.0072003,    550.5, 0.0072133,
    551,   0.0072465,   551.5, 0.0072632,    552, 0.0072849,    552.5, 0.0072664,
    553,   0.007276,    553.5, 0.0072621,    554, 0.0072943,    554.5, 0.0072857,
    555,   0.0073306,   555.5, 0.0073319,    556, 0.0073729,    556.5, 0.0073852,
    557,   0.0073862,   557.5, 0.0073634,    558, 0.007332,     558.5, 0.0073263,
    559,   0.0073511,   559.5, 0.0073734,    560, 0.0073517,    560.5, 0.0072956,
    561,   0.0072263,   561.5, 0.0072043,    562, 0.0072083,    562.5, 0.0072124,
    563,   0.0072097,   563.5, 0.0072343,    564, 0.0073147,    564.5, 0.0073936,
    565,   0.0074045,   565.5, 0.0073914,    566, 0.0073356,    566.5, 0.0072849,
    567,   0.0072308,   567.5, 0.0071798,    568, 0.0071816,    568.5, 0.0071576,
    569,   0.0071603,   569.5, 0.0072141,    570, 0.0072738,    570.5, 0.0073147,
    571,   0.0072816,   571.5, 0.0072278,    572, 0.0071985,    572.5, 0.007171,
    573,   0.0071565,   573.5, 0.0071531,    574, 0.0071545,    574.5, 0.0071574,
    575,   0.0071826,   575.5, 0.0071924,    576, 0.0072177,    576.5, 0.0072153,
    577,   0.007204,    577.5, 0.0072283,    578, 0.0072273,    578.5, 0.0072564,
    579,   0.0072746,   579.5, 0.0072717,    580, 0.0072643,    580.5, 0.0072503,
    581,   0.0072576,   581.5, 0.0072647,    582, 0.0072768,    582.5, 0.0073056,
    583,   0.0073655,   583.5, 0.0073764,    584, 0.0074,       584.5, 0.0074296,
    585,   0.0074777,   585.5, 0.0075227,    586, 0.007561,     586.5, 0.0076166,
    587,   0.0076168,   587.5, 0.0076406,    588, 0.007695,     588.5, 0.0078165,
    589,   0.0078987,   589.5, 0.0079651,    590, 0.0079928,    590.5, 0.008076,
    591,   0.0081474,   591.5, 0.0082231,    592, 0.0082887,    592.5, 0.0083376,
    593,   0.0084549,   593.5, 0.0085696,    594, 0.0087258,    594.5, 0.0089127,
    595,   0.0090478,   595.5, 0.0091884,    596, 0.0093428,    596.5, 0.0095468,
    597,   0.0097698,   597.5, 0.0099582,    598, 0.010189,     598.5, 0.010435,
    599,   0.01067,     599.5, 0.010902,     600, 0.01117,      600.5, 0.011463,
    601,   0.011827,    601.5, 0.012182,     602, 0.012505,     602.5, 0.012786,
    603,   0.013083,    603.5, 0.013449,     604, 0.013811,     604.5, 0.014201,
    605,   0.014631,    605.5, 0.015141,     606, 0.015646,     606.5, 0.016134,
    607,   0.016628,    607.5, 0.017128,     608, 0.017672,     608.5, 0.018197,
    609,   0.018775,    609.5, 0.019364,     610, 0.019976,     610.5, 0.020625,
    611,   0.021314,    611.5, 0.02208,      612, 0.022814,     612.5, 0.023577,
    613,   0.024378,    613.5, 0.025264,     614, 0.026141,     614.5, 0.027009,
    615,   0.027829,    615.5, 0.028658,     616, 0.029413,     616.5, 0.03014,
    617,   0.030853,    617.5, 0.031545,     618, 0.032122,     618.5, 0.032572,
    619,   0.032968,    619.5, 0.033303,     620, 0.033383,     620.5, 0.033197,
    621,   0.032787,    621.5, 0.032254,     622, 0.031369,     622.5, 0.030202,
    623,   0.028766,    623.5, 0.027217,     624, 0.025577,     624.5, 0.023941,
    625,   0.02232,     625.5, 0.020741,     626, 0.019283,     626.5, 0.017904,
    627,   0.016583,    627.5, 0.015284,     628, 0.01409,      628.5, 0.013034,
    629,   0.012093,    629.5, 0.011286,     630, 0.010614,     630.5, 0.0099867,
    631,   0.009384,    631.5, 0.0088291,    632, 0.0083248,    632.5, 0.0078165,
    633,   0.0073553,   633.5, 0.0069289,    634, 0.0065622,    634.5, 0.0061584,
    635,   0.005807,    635.5, 0.0055332,    636, 0.0053186,    636.5, 0.0050869,
    637,   0.0048617,   637.5, 0.0045946,    638, 0.0043743,    638.5, 0.0041225,
    639,   0.0039701,   639.5, 0.0038415,    640, 0.0037528,    640.5, 0.003628,
    641,   0.0034755,   641.5, 0.0033354,    642, 0.0032441,    642.5, 0.0031668,
    643,   0.0030782,   643.5, 0.0029424,    644, 0.0028184,    644.5, 0.0026838,
    645,   0.0025972,   645.5, 0.002486,     646, 0.0024265,    646.5, 0.0023823,
    647,   0.0023655,   647.5, 0.002342,     648, 0.0022575,    648.5, 0.0021616,
    649,   0.0021019,   649.5, 0.0021222,    650, 0.0021781,    650.5, 0.0021747,
    651,   0.0020909,   651.5, 0.0019545,    652, 0.0018277,    652.5, 0.0017949,
    653,   0.0017827,   653.5, 0.0018109,    654, 0.0017875,    654.5, 0.0017794,
    655,   0.0017572,   655.5, 0.0017125,    656, 0.0016393,    656.5, 0.0015859,
    657,   0.0014941,   657.5, 0.0014324,    658, 0.0013884,    658.5, 0.0014078,
    659,   0.0014588,   659.5, 0.001431,     660, 0.0013832,    660.5, 0.0012898,
    661,   0.001268,    661.5, 0.0012703,    662, 0.0012426,    662.5, 0.0011721,
    663,   0.0011182,   663.5, 0.0011282,    664, 0.0011792,    664.5, 0.0011513,
    665,   0.0010859,   665.5, 0.0010306,    666, 0.00098061,   666.5, 0.00097417,
    667,   0.00094286,  667.5, 0.00095925,   668, 0.00096217,   668.5, 0.00097694,
    669,   0.00099407,  669.5, 0.0010498,    670, 0.0010633,    670.5, 0.0010833,
    671,   0.0010254,   671.5, 0.00097712,   672, 0.0009301,    672.5, 0.00091204,
    673,   0.00087853,  673.5, 0.00086077,   674, 0.00078765,   674.5, 0.0007889,
    675,   0.00076026,  675.5, 0.00077746,   676, 0.00073842,   676.5, 0.00073411,
    677,   0.00072337,  677.5, 0.00071518,   678, 0.00066453,   678.5, 0.00066049,
    679,   0.00064792,  679.5, 0.00066818,   680, 0.00063068,   680.5, 0.00062177,
    681,   0.00062102,  681.5, 0.0005922,    682, 0.00054359,   682.5, 0.00048649,
    683,   0.00050149,  683.5, 0.00050825,   684, 0.00045188,   684.5, 0.00038367,
    685,   0.00035669,  685.5, 0.00039537,   686, 0.00050453,   686.5, 0.00054589,
    687,   0.00050165,  687.5, 0.00038032,   688, 0.00037339,   688.5, 0.00039242,
    689,   0.00041071,  689.5, 0.00038239,   690, 0.00038886,   690.5, 0.00037822,
    691,   0.00034639,  691.5, 0.00031781,   692, 0.0003332,    692.5, 0.00034777,
    693,   0.00033341,  693.5, 0.00028011,   694, 0.00023009,   694.5, 0.00018507,
    695,   0.000219,    695.5, 0.0001986,    696, 0.00018478,   696.5, 0.0001265,
    697,   0.00014983,  697.5, 0.00015749,   698, 0.00019509,   698.5, 0.00020306,
    699,   0.0002272,   699.5, 0.00022777,   700, 0.00020832,   700.5, 0.00019888,
    701,   0.00021148,  701.5, 0.00025075,   702, 0.00025153,   702.5, 0.00024733,
    703,   0.00021905,  703.5, 0.00015489,   704, 0.000088315,  704.5, 0.00010178,
    705,   0.0001253,   705.5, 0.00012661,   706, 0.000037877,  707.5, 0.00013135,
    708,   0.00026212,  708.5, 0.00030468,   709, 0.00027634,   709.5, 0.00017401,
    710,   0.00011046,  710.5, 0.000073995,  711, 0.00010225,   711.5, 0.000086839,
    712,   0.000032133, 712.5, 0.0000023059, 713, 0.000017295,  713.5, 0.000029779,
    714,   0.000011197, 750.5, 0.00017438,   751, 0.00040676,   751.5, 0.00031362,
};

inline constexpr auto PHILIPS_HELIOS_RAW = std::array<f32, 1054>{
    301.F, 0.000011651,  302, 0.000012083,  303, 0.0000044411, 304, 0.0000051401,
    305,   0.0000054825, 306, 0.0000096789, 307, 0.000014224,  308, 0.0000039218,
    309,   0.0000010569, 310, 0.0000069733, 311, 0.0000040034, 312, 0.0000036752,
    319,   1.1221e-7,    320, 0.0000066348, 321, 0.0000045198, 322, 0.000010341,
    323,   0.000015043,  324, 0.0000080655, 325, 0.0000096445, 326, 0.000009182,
    328,   0.0000044144, 329, 0.000022698,  330, 0.000020906,  331, 0.000012131,
    332,   0.000015051,  333, 0.000021105,  334, 0.000014803,  335, 0.0000069309,
    336,   0.0000084728, 337, 0.0000095008, 338, 0.000018811,  339, 0.000019508,
    340,   0.0000094413, 341, 0.0000070651, 342, 1.1843e-7,    343, 0.0000038176,
    344,   0.0000054134, 345, 0.000011628,  346, 0.000013351,  347, 0.000015569,
    348,   0.000014215,  349, 0.0000033061, 350, 0.0000017149, 351, 0.000003449,
    352,   0.0000074435, 353, 0.0000095864, 354, 0.00001131,   355, 0.000028333,
    356,   0.000032008,  357, 0.000028199,  358, 0.000038183,  359, 0.000022347,
    361,   0.0000038603, 362, 0.0000045643, 363, 0.0000158,    364, 0.000033638,
    365,   0.000026957,  366, 0.000024431,  367, 0.000028412,  368, 0.000035336,
    369,   0.000033912,  370, 0.000019083,  371, 0.000005769,  372, 0.0000069414,
    373,   0.000022055,  374, 0.00002391,   375, 0.00002544,   376, 0.000025297,
    377,   0.000020616,  378, 0.000029618,  379, 0.000026759,  380, 0.00001907,
    381,   0.000023264,  382, 0.000025238,  383, 0.000024054,  384, 0.000019298,
    385,   0.000011038,  386, 0.000022666,  387, 0.000027702,  388, 0.000020743,
    389,   0.000026682,  390, 0.000031893,  391, 0.000032177,  392, 0.000030151,
    393,   0.000032123,  394, 0.000035249,  395, 0.000034944,  396, 0.000036423,
    397,   0.000043231,  398, 0.000042878,  399, 0.000036439,  400, 0.000038997,
    401,   0.000043633,  402, 0.000038168,  403, 0.000032736,  404, 0.000040783,
    405,   0.000043922,  406, 0.000039388,  407, 0.000042972,  408, 0.000038476,
    409,   0.000039443,  410, 0.000053947,  411, 0.000050506,  412, 0.000052173,
    413,   0.000045578,  414, 0.000035731,  415, 0.000039972,  416, 0.000047458,
    417,   0.000050772,  418, 0.00004747,   419, 0.000052244,  420, 0.000057942,
    421,   0.000061643,  422, 0.000054562,  423, 0.000057005,  424, 0.00006979,
    425,   0.000065771,  426, 0.000065412,  427, 0.000073545,  428, 0.000074269,
    429,   0.000064157,  430, 0.000064643,  431, 0.00007237,   432, 0.000076055,
    433,   0.000081364,  434, 0.000077911,  435, 0.000088065,  436, 0.000097571,
    437,   0.00009213,   438, 0.000095089,  439, 0.00010008,   440, 0.000090184,
    441,   0.000085417,  442, 0.000075439,  443, 0.000068467,  444, 0.000062774,
    445,   0.000065201,  446, 0.000085467,  447, 0.000099899,  448, 0.00012268,
    449,   0.00017154,   450, 0.00018511,   451, 0.00015022,   452, 0.0001161,
    453,   0.00010133,   454, 0.00010932,   455, 0.000097525,  456, 0.000070757,
    457,   0.000055387,  458, 0.00006154,   459, 0.00005997,   460, 0.000064928,
    461,   0.000072376,  462, 0.000092564,  463, 0.00010364,   464, 0.00011753,
    465,   0.00019254,   466, 0.00033917,   467, 0.00039371,   468, 0.00028247,
    469,   0.00017731,   470, 0.00013091,   471, 0.00010975,   472, 0.000096528,
    473,   0.000087035,  474, 0.00011245,   475, 0.00013519,   476, 0.000091778,
    477,   0.000053245,  478, 0.000044037,  479, 0.000043385,  480, 0.000037435,
    481,   0.000032251,  482, 0.000038479,  483, 0.000045578,  484, 0.000039002,
    485,   0.000035244,  486, 0.000039036,  487, 0.000043048,  488, 0.000043599,
    489,   0.000046877,  490, 0.000063679,  491, 0.000071218,  492, 0.000063142,
    493,   0.00006873,   494, 0.000087824,  495, 0.00014252,   496, 0.00032317,
    497,   0.00082078,   498, 0.0012333,    499, 0.00089265,   500, 0.00038344,
    501,   0.00017168,   502, 0.00011124,   503, 0.00008547,   504, 0.000068304,
    505,   0.00006102,   506, 0.000056672,  507, 0.000053179,  508, 0.000051169,
    509,   0.000056082,  510, 0.00005995,   511, 0.000054599,  512, 0.000054764,
    513,   0.000071287,  514, 0.00020679,   515, 0.00035274,   516, 0.00023258,
    517,   0.00008764,   518, 0.000061296,  519, 0.00005801,   520, 0.000056666,
    521,   0.000053234,  522, 0.000053649,  523, 0.000050733,  524, 0.000050819,
    525,   0.000056288,  526, 0.000058783,  527, 0.000060268,  528, 0.000057387,
    529,   0.000057776,  530, 0.000063823,  531, 0.000065393,  532, 0.000063851,
    533,   0.000063285,  534, 0.000067984,  535, 0.000069978,  536, 0.00006833,
    537,   0.000071878,  538, 0.000075886,  539, 0.00007783,   540, 0.000080381,
    541,   0.000083323,  542, 0.000085157,  543, 0.00009663,   544, 0.00010247,
    545,   0.00011868,   546, 0.00014599,   547, 0.00016823,   548, 0.00020949,
    549,   0.00028005,   550, 0.00035462,   551, 0.00040996,   552, 0.00043712,
    553,   0.00043876,   554, 0.00042276,   555, 0.00041103,   556, 0.00041618,
    557,   0.00043356,   558, 0.00045128,   559, 0.00046812,   560, 0.00049483,
    561,   0.00052252,   562, 0.00055309,   563, 0.00059832,   564, 0.00068508,
    565,   0.00088037,   566, 0.0013973,    567, 0.0027471,    568, 0.0050482,
    569,   0.0051968,    570, 0.0029198,    571, 0.0015629,    572, 0.0012513,
    573,   0.0012146,    574, 0.0012706,    575, 0.0013803,    576, 0.0015338,
    577,   0.0017086,    578, 0.0019157,    579, 0.0021651,    580, 0.0024732,
    581,   0.0028243,    582, 0.0031605,    583, 0.0034544,    584, 0.0035508,
    585,   0.0031298,    586, 0.002053,     587, 0.00088858,   588, 0.00029725,
    589,   0.00016305,   590, 0.00022049,   591, 0.00059083,   592, 0.0014913,
    593,   0.0025909,    594, 0.0033598,    595, 0.0036808,    596, 0.0036777,
    597,   0.003528,     598, 0.0033149,    599, 0.0030862,    600, 0.0028815,
    601,   0.0026514,    602, 0.0024231,    603, 0.0022412,    604, 0.0020855,
    605,   0.0019372,    606, 0.0017756,    607, 0.0016391,    608, 0.001525,
    609,   0.0014288,    610, 0.001341,     611, 0.0012618,    612, 0.0011893,
    613,   0.001142,     614, 0.0012616,    615, 0.0019013,    616, 0.0021218,
    617,   0.0013971,    618, 0.00093824,   619, 0.00084006,   620, 0.00078844,
    621,   0.00075082,   622, 0.00072318,   623, 0.00068544,   624, 0.00066542,
    625,   0.00065504,   626, 0.00062948,   627, 0.0006108,    628, 0.00058717,
    629,   0.00055811,   630, 0.00055532,   631, 0.00053799,   632, 0.00051512,
    633,   0.00049755,   634, 0.00047889,   635, 0.00047027,   636, 0.00045784,
    637,   0.00044654,   638, 0.00043348,   639, 0.00042675,   640, 0.00041821,
    641,   0.00041202,   642, 0.00039485,   643, 0.00038182,   644, 0.00036604,
    645,   0.00035105,   646, 0.00035016,   647, 0.00035607,   648, 0.00034038,
    649,   0.0003368,    650, 0.00032588,   651, 0.00031053,   652, 0.00030643,
    653,   0.00030979,   654, 0.00031197,   655, 0.00032068,   656, 0.00032072,
    657,   0.00030154,   658, 0.00029771,   659, 0.00028113,   660, 0.00026261,
    661,   0.0002631,    662, 0.00025663,   663, 0.00024848,   664, 0.00024238,
    665,   0.0002417,    666, 0.00024432,   667, 0.00025997,   668, 0.00026382,
    669,   0.00026832,   670, 0.00027989,   671, 0.00028462,   672, 0.00026974,
    673,   0.00026016,   674, 0.00025804,   675, 0.00025456,   676, 0.00024379,
    677,   0.00022668,   678, 0.00022239,   679, 0.00020491,   680, 0.0001817,
    681,   0.00018216,   682, 0.00017847,   683, 0.00016833,   684, 0.00017193,
    685,   0.00015783,   686, 0.00014651,   687, 0.00014071,   688, 0.00014153,
    689,   0.00014563,   690, 0.00013737,   691, 0.0001184,    692, 0.00011548,
    693,   0.00012019,   694, 0.00010683,   695, 0.00011371,   696, 0.00012204,
    697,   0.00012025,   698, 0.00011002,   699, 0.00011847,   700, 0.00013231,
    701,   0.00011057,   702, 0.00010919,   703, 0.00011919,   704, 0.0001061,
    705,   0.000094324,  706, 0.00010861,   707, 0.00012309,   708, 0.00011494,
    709,   0.00011839,   710, 0.00010438,   711, 0.000091234,  712, 0.000086913,
    713,   0.000090327,  714, 0.000096398,  715, 0.0001016,    716, 0.0001018,
    717,   0.00010533,   718, 0.00010794,   719, 0.00012268,   720, 0.00010708,
    721,   0.000096605,  722, 0.000090644,  723, 0.00010123,   724, 0.00011063,
    725,   0.00009357,   726, 0.000088445,  727, 0.000072392,  728, 0.000081768,
    729,   0.000093405,  730, 0.000087141,  731, 0.000091941,  732, 0.000090964,
    733,   0.000074009,  734, 0.000080779,  735, 0.000089105,  736, 0.00011365,
    737,   0.00011166,   738, 0.00011199,   739, 0.00010597,   740, 0.00008946,
    741,   0.000089548,  742, 0.00010657,   743, 0.00010115,   744, 0.00010395,
    745,   0.00010661,   746, 0.0001135,    747, 0.000092225,  748, 0.000082831,
    749,   0.000097288,  750, 0.000085635,  751, 0.00011223,   752, 0.00010103,
    753,   0.000095255,  754, 0.000097911,  755, 0.000087516,  756, 0.000097641,
    757,   0.000096119,  758, 0.000067901,  759, 0.000078658,  760, 0.00010228,
    761,   0.000090017,  762, 0.000088834,  763, 0.000092764,  764, 0.00011456,
    765,   0.00015968,   766, 0.00035244,   767, 0.0003547,    768, 0.0001711,
    769,   0.00021119,   770, 0.00030371,   771, 0.00017409,   772, 0.000099939,
    773,   0.00011063,   774, 0.000075086,  775, 0.000065243,  776, 0.000083753,
    777,   0.00010749,   778, 0.000072869,  779, 0.000091314,  780, 0.000069817,
    781,   0.000059621,  782, 0.000074132,  783, 0.000087953,  784, 0.000055283,
    785,   0.000063184,  786, 0.000081659,  787, 0.000093594,  788, 0.000085452,
    789,   0.000092399,  790, 0.000097927,  791, 0.000091457,  792, 0.00011069,
    793,   0.00011022,   794, 0.00011217,   795, 0.00014141,   796, 0.000098094,
    797,   0.00011263,   798, 0.00010453,   799, 0.00011049,   800, 0.00012279,
    801,   0.000095036,  802, 0.000095055,  803, 0.00017067,   804, 0.00013665,
    805,   0.0001441,    806, 0.0001112,    807, 0.00013033,   808, 0.00013426,
    809,   0.00017412,   810, 0.00021502,   811, 0.0001462,    812, 0.00019268,
    813,   0.00025546,   814, 0.000362,     815, 0.00057857,   816, 0.0010693,
    817,   0.002639,     818, 0.0050431,    819, 0.0060623,    820, 0.0049033,
    821,   0.0026745,    822, 0.0012502,    823, 0.00064022,   824, 0.00047915,
    825,   0.00034401,   826, 0.00024837,   827, 0.00019394,   828, 0.00015154,
    829,   0.00012668,   830, 0.0001164,    831, 0.000094771,  832, 0.00014234,
    833,   0.00012428,   834, 0.00012884,   835, 0.000060282};

constexpr auto GLASS_BAF10_ETA = PiecewiseSpectrum(
    std::span<const f32>(GLASS_BAF10_ETA_RAW.data(), GLASS_BAF10_ETA_RAW.size()));

constexpr auto GLASS_BK7_ETA = PiecewiseSpectrum(
    std::span<const f32>(GLASS_BK7_ETA_RAW.data(), GLASS_BK7_ETA_RAW.size()));

constexpr auto GLASS_F11_ETA = PiecewiseSpectrum(
    std::span<const f32>(GLASS_F11_ETA_RAW.data(), GLASS_F11_ETA_RAW.size()));

constexpr auto AU_ETA =
    PiecewiseSpectrum(std::span<const f32>(AU_ETA_RAW.data(), AU_ETA_RAW.size()));

constexpr auto AU_K =
    PiecewiseSpectrum(std::span<const f32>(AU_K_RAW.data(), AU_K_RAW.size()));

constexpr auto AL_ETA =
    PiecewiseSpectrum(std::span<const f32>(AL_ETA_RAW.data(), AL_ETA_RAW.size()));

constexpr auto AL_K =
    PiecewiseSpectrum(std::span<const f32>(AL_K_RAW.data(), AL_K_RAW.size()));

constexpr auto AG_ETA =
    PiecewiseSpectrum(std::span<const f32>(AG_ETA_RAW.data(), AG_ETA_RAW.size()));

constexpr auto AG_K =
    PiecewiseSpectrum(std::span<const f32>(AG_K_RAW.data(), AG_K_RAW.size()));

constexpr auto CU_ETA =
    PiecewiseSpectrum(std::span<const f32>(CU_ETA_RAW.data(), CU_ETA_RAW.size()));

constexpr auto CU_K =
    PiecewiseSpectrum(std::span<const f32>(CU_K_RAW.data(), CU_K_RAW.size()));

constexpr auto TIO2_ETA =
    PiecewiseSpectrum(std::span<const f32>(TIO2_ETA_RAW.data(), TIO2_ETA_RAW.size()));

constexpr auto TIO2_K =
    PiecewiseSpectrum(std::span<const f32>(TIO2_K_RAW.data(), TIO2_K_RAW.size()));

constexpr auto CIE_FL_10 =
    PiecewiseSpectrum(std::span<const f32>(CIE_FL_10_RAW.data(), CIE_FL_10_RAW.size()));

constexpr auto PHILIPS_CANDLELIGHT = PiecewiseSpectrum(
    std::span<const f32>(PHILIPS_CANDLELIGHT_RAW.data(), PHILIPS_CANDLELIGHT_RAW.size()));

constexpr auto PHILIPS_HELIOS = PiecewiseSpectrum(
    std::span<const f32>(PHILIPS_HELIOS_RAW.data(), PHILIPS_HELIOS_RAW.size()));

constexpr auto AIR_ETA = ConstantSpectrum(1.000277F);

constexpr auto POLYPROPYLENE_ETA = ConstantSpectrum(1.49F);

#endif // PT_SPECTRAL_DATA_H
